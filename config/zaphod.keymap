#include "zmk-helpers/key-labels/34.h"

#define MOUSE_IGNORED_KEYS LT1 LT3 RT0 RT1 RT2 RT3 RT4 RM1 RM2 RM3 RB1 RB2 RH0 RH1
#define REVERSE_SWAPPER RH0

/* source the base definitions */
#include "base.dtsi"

#define __LCTL__A__ &hml LCTL A
#define __LOPT__R__ &hml LALT R
#define __LGUI__S__ &hml LGUI S
#define __LSFT__T__ &hml LSHFT T
#define __RSFT__N__ &hmr RSHFT N
#define __RGUI__E__ &hmr RGUI E
#define __ROPT__I__ &hmr RALT I
#define __RCTL__O__ &hmr RCTL O

#define __SPC_NAV__ &lt_spc NAV 0
#define __FUN_RPT__ &lt FUN &key_repeat

ZMK_CONDITIONAL_LAYER(sys, FUN NUM, SYS)  // FN + NUM --> SYS

ZMK_LAYER(base,
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    _____Q_____   _____W_____   _____F_____   _____P_____   _____B_____     _____J_____   _____L_____   _____U_____   _____Y_____   ___SQUOT___ 
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    __LCTL__A__   __LOPT__R__   __LGUI__S__   __LSFT__T__   _____G_____     _____M_____   __RSFT__N__   __RGUI__E__   __ROPT__I__   __RCTL__O__
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    _____Z_____   _____X_____   _____C_____   _____D_____   _____V_____     _____K_____   _____H_____   m__COMMA__m   m___DOT___m   ___SLASH___ 
//╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤ ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
                                              __FUN_RPT__   __SPC_NAV__     _SMRT_SHFT_   _SMRT__NUM_
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
)

ZMK_LAYER(nav,
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ____ESC____   __TAB_SWP__   __APP_SWP__   __WIN_SWP__   ___________     __PAGE_UP__   _BACKSPACE_   ____UP_____   ___________   ___________
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &sk LCTRL     &sk LALT      &sk LGUI      &sk LSHFT     ___________     _PAGE_DOWN_   ___LEFT____   ___DOWN____   ___RIGHT___   ___ENTER___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___________   _UNDO_REDO_   __CPY_CUT__   _PSTE_SLCT_   ___________     ___________   ____TAB____   ___________   ___________   ___________ 
//╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤ ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
                                              ___________   vvvvvvvvvvv     ___SHIFT___    CANCEL
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
)

/*****************************************************************************
    Sample Layer
 *****************************************************************************

ZMK_LAYER(layer_name,
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___________   ___________   ___________   ___________   ___________     ___________   ___________   ___________   ___________   ___________
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___________   ___________   ___________   ___________   ___________     ___________   ___________   ___________   ___________   ___________
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___________   ___________   ___________   ___________   ___________     ___________   ___________   ___________   ___________   ___________ 
//╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤ ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
                                              ___________   ___________     ___________   ___________
//                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯
)

******************************************************************************/









// #include <behaviors.dtsi>
// #include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/outputs.h>

// #define NAV_L 1
// #define OTH_L 2
// #define NUM_L 3
// #define SYM_L 4
// #define MED_L 5
// #define FUN_L 6

// // Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
// &lt { quick_tap_ms = <200>; };

// / {
//     combos {
//         compatible = "zmk,combos";

//         med_mo {
// 	    timeout-ms = <50>;
//             key-positions = <30 31>;
//             bindings = <&mo MED_L>;
//         };

//         fn_mo {
// 	    timeout-ms = <50>;
//             key-positions = <32 33>;
//             bindings = <&mo FUN_L>;
//         };

//     };

//     behaviors {
//         hm: homerow_mods {
//             compatible = "zmk,behavior-hold-tap";
//             label = "homerow mods";
//             #binding-cells = <2>;
//             tapping_term_ms = <200>;
//             flavor = "tap-preferred";
//             bindings = <&kp>, <&kp>;
//         };
//     };

//     keymap {
//         compatible = "zmk,keymap";

//         default_layer {
//             label = "Base";
//             bindings = <
//                 &kp Q      &kp W      &kp F       &kp P          &kp B         &kp J            &kp L          &kp U       &kp Y      &kp QUOT
//                 &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHFT T    &kp G         &kp M            &hm RSHFT N    &hm RCTRL E &hm LALT I &hm LGUI O 
//                 &kp Z      &kp X      &kp C       &kp D          &kp V         &kp K            &kp H          &kp COMMA   &kp DOT    &kp FSLH
//                                                   &lt NAV_L TAB  &lt OTH_L RET &lt NUM_L SPACE  &lt SYM_L BKSP
//             >;
//         };

//         nav_layer {
//             label = "Nav";
//             bindings = <
//                 &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
//                 &trans     &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW    &kp UARW   &kp RARW
//                 &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
//                                                   &trans          &trans       &kp ESC          &kp DEL
//             >;
//         };

//         other_layer {
//             label = "Other";
//             bindings = <
//                 &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
//                 &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
//                 &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
//                                                   &trans          &trans       &trans           &trans
//             >;
//         };

//         num_layer {
//             label = "Num";
//             bindings = <
//                 &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &trans         &trans      &trans     &trans
//                 &kp SEMI   &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &trans         &trans      &trans     &trans
//                 &kp GRAVE  &kp N1     &kp N2      &kp N3          &kp BSLH      &trans          &trans         &trans      &trans     &trans
//                                                   &kp N0          &kp MINUS     &trans          &trans
//             >;
//         };

//         sym_layer {
//             label = "Sym";
//             bindings = <
//                 &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &trans &trans   &trans    &trans    &trans
//                 &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &trans &trans   &trans    &trans    &trans
//                 &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &trans &trans   &trans    &trans    &trans
//                                                    &kp LS(N0) &kp UNDER         &trans &trans
//             >;
//         };

//         media_layer {
//             label = "Media";
//             bindings = <
//                 &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
//                 &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
//                 &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
//                                                   &trans          &trans       &kp C_STOP       &kp C_PLAY_PAUSE
//             >;
//         };

//         fun_layer {
//             label = "Fun";
//             bindings = <
//                 &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
//                 &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
//                 &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
//                                                    &none      &none             &trans          &trans
//             >;
//         };
//     };
// };
